name: GitHub Container Registry にイメージをプッシュする
on:
  push:
    tags:
      - 'v*.*.*'
env:
  RUBY_VERSION: 3.1.0
  NODE_VERSION: 16.13.1
  RAILS_ENV: test
  TZ: '/usr/share/zoneinfo/Asia/Tokyo'
  IMAGE_NAME: hello_docker_world
jobs:
  build_and_push:
    strategy:
      matrix:
        os: [ubuntu-latest]
    name: ビルドアンドプッシュ
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Git のタグ名 (vX.Y.Z) を Docker 用のタグ名 (X.Y.Z) に変換して変数に保存する
        id: set_docker_tag_variable
        run: |
          GIT_TAG=$(git tag --sort=-creatordate | sed -n 1p)
          DOCKER_TAG="${GIT_TAG//v/}"
          echo "::set-output name=docker_tag::${DOCKER_TAG}"
      - name: （デバッグ用）Docker 用のタグ名の変数の保持を確認する
        env:
          STEPS_CONTEXT: ${{ toJson(steps.set_docker_tag_variable_for_debug) }}
        run: |
          echo '[Docker 用のタグ名の変数の保持を確認する]'
          echo "${STEPS_CONTEXT}"
          echo "${{ steps.set_docker_tag_variable.outputs.docker_tag }}"
      - name: GitHub Container Registry にログインする
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: 環境の確認
        id: this_environments
        run: |
          echo "::set-output name=hostname::$(hostname)"
      - name: イメージをビルドして GitHub Container Registry にプッシュする
        if: ${{ steps.this_environments.outputs.hostname != 'docker-desktop' }} # act でローカル実行した場合は push しない
        uses: docker/build-push-action@v2
        with:
          context: .
          path: Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ steps.set_docker_tag_variable.outputs.docker_tag }}
      - name: CI 成功時に実行される Step
        if: success()
        run: |
          echo '[LOG] CI の実行に成功しました'
          echo "[LOG] Ruby version: $(ruby -v)"
          echo "[LOG] Node.js version: $(node -v)"
          echo "[LOG] Yarn version: $(yarn -v)"
      - name: CI 失敗時に実行される Step
        if: failure()
        run: |
          echo '[LOG] CI の実行に失敗しました'
          echo "[LOG] Ruby version: $(ruby -v)"
          echo "[LOG] Node.js version: $(node -v)"
          echo "[LOG] Yarn version: $(yarn -v)"
